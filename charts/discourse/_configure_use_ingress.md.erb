<%
=begin
apps: discourse
platforms: kubernetes
id: configure_use_ingress
title: Configure and use Ingress with Discourse
category: configuration
weight: 20
highlight: 20
=end %>

This chart provides support for Ingress resources. If you have an ingress controller installed on your cluster, such as [nginx-ingress](https://hub.kubeapps.com/charts/stable/nginx-ingress) or [traefik](https://hub.kubeapps.com/charts/stable/traefik), you can utilize the ingress controller to serve your Discourse application.

To enable Ingress integration, set the *ingress.enabled* parameter to *true*.

### Hosts

Most likely you will only want to have one hostname that maps to this Discourse installation. If that's your case, the property *ingress.hostname* will set it. However, it is possible to have more than one host. To facilitate this, the *ingress.extraHosts* object can be specified as an array.

For each host indicated at *ingress.extraHosts*, please indicate a *name*, *path*, and any *annotations* that you may want the ingress controller to know about.

The actual TLS secret do not have to be generated by this chart. However, please note that if TLS is enabled, the ingress record will not work until this secret exists.

For annotations, please see [this document](https://github.com/kubernetes/ingress-nginx/blob/master/docs/user-guide/nginx-configuration/annotations.md). Not all annotations are supported by all ingress controllers, but this document does a good job of indicating which annotation is supported by many popular ingress controllers.

### TLS Secrets

This chart will facilitate the creation of TLS secrets for use with the ingress controller, however, this is not required. There are three common use cases:

* Helm generates/manages certificate secrets
* User generates/manages certificates separately
* An additional tool (like [kube-lego](https://kubeapps.com/charts/stable/kube-lego)) manages the secrets for the application

In the first two cases, one will need a certificate and a key. We would expect them to look like this:

* Certificate files should look like (and there can be more than one certificate if there is a certificate chain)
~~~
-----BEGIN CERTIFICATE-----
MIID6TCCAtGgAwIBAgIJAIaCwivkeB5EMA0GCSqGSIb3DQEBCwUAMFYxCzAJBgNV
...
jScrvkiBO65F46KioCL9h5tDvomdU1aqpI/CBzhvZn1c0ZTf87tGQR8NK7v7
-----END CERTIFICATE-----
~~~

* Keys should look like:
~~~
-----BEGIN RSA PRIVATE KEY-----
MIIEogIBAAKCAQEAvLYcyu8f3skuRyUgeeNpeDvYBCDcgq+LsWap6zbX5f8oLqp4
...
wrj2wDbCDCFmfqnSJ+dKI3vFLlEz44sAV8jX/kd4Y6ZTQhlLbYc=
-----END RSA PRIVATE KEY-----
~~~

If you are going to use Helm to manage the certificates, please copy these values into the *certificate* and *key* values for a given *ingress.secrets* entry.

If you are going to manage TLS secrets outside of Helm, please know that you can create a TLS secret (named discourse.local-tls for example).

Please see [this example](https://github.com/kubernetes/contrib/tree/master/ingress/controllers/nginx/examples/tls) for more information.
