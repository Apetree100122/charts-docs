<%
=begin
apps: etcd
platforms: kubernetes
id: production_configuration
title: Production configuration and horizontal scaling
category: configuration
weight: 20
highlight: 20
=end %>

This chart includes a *values-production.yaml* file where you can find some parameters oriented to production configuration in comparison to the regular *values.yaml*. You can use this file instead of the default one.

* Number of etcd nodes:

~~~
- statefulset.replicaCount: 1
+ statefulset.replicaCount: 3
~~~

* Enable prometheus to access etcd metrics endpoint:

~~~
- metrics.enabled: false
+ metrics.enabled: true
~~~

To horizontally scale this chart once it has been deployed, you can upgrade the deployment using a new value for the statefulset.replicaCount parameter.

### Use custom configuration

In order to use custom configuration parameters, two options are available:

* Using environment variables: etcd allows setting environment variables that map to configuration settings. In order to set extra environment variables, use the envVarsConfigMap value to point to a ConfigMap (shown in the below example) that contains them. This ConfigMap can be created with the *-f /tmp/configurationEnvVars.yaml* flag. Then deploy the chart with the envVarsConfigMap=etcd-env-vars parameter:

~~~
$ cat << EOF > /tmp/configurationEnvVars.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: etcd-env-vars
  namespace: default
data:
  ETCD_AUTO_COMPACTION_RETENTION: "0"
  ETCD_HEARTBEAT_INTERVAL: "150"
EOF
~~~

* Using a custom *etcd.conf.yml* file: The etcd chart allows mounting a custom *etcd.conf.yml* file as ConfigMap (named, for example, etcd-conf) and deploy it using the configFileConfigMap=etcd-conf parameter.